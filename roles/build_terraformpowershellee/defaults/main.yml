---
ee_version: 3
version: latest
_github_api_headers: "{{ {'GITHUB_TOKEN': lookup('ansible.builtin.env', 'GITHUB_TOKEN')} if (lookup('ansible.builtin.env', 'GITHUB_TOKEN')) else {} }}"
dest_dir: /home/ansible/ansible/builder/terraformpowershellee/
pah_name: tower.shadowman.dev
image_name: terraformpowershellee
bindep_file: bindep.txt
galaxy_requirements_file: requirements.yml
python_requirements_file: requirements.txt
ee_base_image: tower.shadowman.dev/ansible-automation-platform/ee-minimal-rhel8:2.16
ee_base_sig_name: registry.redhat.io/ansible-automation-platform/ee-minimal-rhel8:2.16
galaxy_keyring: /certs/fullkeyring.kbx
ee_package_manager_path: /usr/bin/microdnf
ee_build_files:
  - src: /home/ansible/ansible/builder/terraformpowershellee/ansible.cfg
    dest: configs
  - src: /certs/shadowman_cert.cer
    dest: certs
  - src: /certs/shadowman_private.key
    dest: certs
  - src: /certs/certificate.pfx
    dest: certs
  - src: /certs/service-ca-cert.crt
    dest: certs
ee_bindep:
  - git [platform:rpm]
  - pkgconf-pkg-config [platform:rpm]
  - systemd-devel [platform:rpm]
  - gcc [platform:rpm]
  - python3.11-devel [platform:rpm]
ee_python:
  - jmespath
ee_collections:
  - name: ansible.controller
  - name: ansible.eda
  - name: ansible.hub
  - name: ansible.platform
  - name: cloud.terraform
  - name: community.general
  - name: community.vmware
  - name: infra.aap_configuration
  - name: vmware.vmware_rest
ee_prepend_galaxy:
  - ADD _build/configs/ansible.cfg /etc/ansible/ansible.cfg
ee_append_final:
  - RUN microdnf install -y yum-utils
  - RUN dnf config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
  - RUN dnf install -y terraform
  - RUN dnf install -y https://github.com/PowerShell/PowerShell/releases/download/v{{ version }}/powershell-{{ version }}-1.rh.x86_64.rpm
  - RUN /opt/microsoft/powershell/7/pwsh -Command 'Install-Module VMware.PowerCLI -Scope AllUsers -Confirm:$False -Force'
  - RUN /opt/microsoft/powershell/7/pwsh -Command 'Set-PowerCLIConfiguration -Scope AllUsers -ParticipateInCEIP $false -Confirm:$False'
  - RUN /opt/microsoft/powershell/7/pwsh -Command 'Set-PowerCLIConfiguration -Scope AllUsers -InvalidCertificateAction Ignore -Confirm:$False'
  - COPY _build/certs/shadowman_cert.cer /certs/shadowman_cert.cer
  - COPY _build/certs/shadowman_private.key /certs/shadowman_private.key
  - COPY _build/certs/certificate.pfx /certs/certificate.pfx
  - COPY _build/certs/service-ca-cert.crt /certs/service-ca-cert.crt
  - RUN microdnf reinstall tzdata -y
  - RUN rm -f /etc/ansible/ansible.cfg
  - RUN microdnf clean all
  - RUN dnf clean all
