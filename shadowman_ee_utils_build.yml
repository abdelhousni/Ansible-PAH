---
- name: Sync all PAH EE and Remote Repos
  hosts: localhost
  gather_facts: false
  become: false
  tags: sync

  roles:
    - ah_sync_ee
    - ah_sync_repos

- name: Build new Shadowmanee using EE Utils collection
  hosts: ansibledev.shadowman.dev
  tags: buildee

  vars:
    ee_version: 3
    ee_builder_dir_clean: false
    ee_builder_dir: "/home/ansible/ansible/builder/shadowmanee"
    ee_galaxy_keyring: "/certs/fullkeyring.kbx"
    ee_update_base_images: true
    ee_base_image: tower.shadowman.dev/ansible-automation-platform/ee-minimal-rhel8:2.16
    ee_base_sig_name: registry.redhat.io/ansible-automation-platform/ee-minimal-rhel8:2.16
    ee_container_policy: system
    ee_base_registry_username: "{{ pah_user }}"
    ee_base_registry_password: "{{ pah_pass }}"
    ee_prune_images: true
    ee_pull_collections_from_hub: true
    ee_ah_host: "{{ lookup('env', 'AH_HOST') }}"
    ee_ah_token: "{{ lookup('env', 'AH_API_TOKEN') }}"
    alt_name: "Automation Hub Shadowman execution environment"
    ee_name: shadowmanee
    ee_reg_credential: Automation Hub Container Registry
    ee_registry_dest: "{{ lookup('env', 'AH_HOST') }}"
    ee_registry_username: "{{ pah_user }}"
    ee_registry_password: "{{ pah_pass }}"
    ee_verbosity: 1
    ee_list:
      - name: shadowmanee
        alt_name: "Automation Hub Shadowman execution environment"
        tag: "{{ ansible_date_time.iso8601_basic_short }}"
        dependencies:
          system:
            - python3-jinja2 [platform:rpm]
            - which [platform:rpm]
            - git [platform:rpm]
            - libcurl-devel [platform:rpm]
            - gcc [platform:rpm]
            - python3.11-devel [platform:rpm]
            - pkgconf-pkg-config [platform:rpm]
            - openssl-devel [platform:rpm]
            - libxml2-devel [platform:rpm]
            - libxslt-devel [platform:rpm]
          python:
            - scp
            - pyats
            - genie
            - python-jenkins
          galaxy:
            collections:
              - name: amazon.aws
              - name: ansible.controller
              - name: ansible.eda
              - name: ansible.hub
              - name: ansible.netcommon
              - name: ansible.posix
              - name: ansible.platform
              - name: ansible.utils
              - name: ansible.windows
              - name: arista.eos
              - name: azure.azcollection
              - name: cisco.ios
              - name: cloud.terraform
              - name: community.postgresql
              - name: community.crypto
              - name: community.general
              - name: community.vmware
              - name: community.windows
              - name: containers.podman
              - name: datadog.dd
              - name: dynatrace.oneagent
              - name: f5networks.f5_modules
              - name: ibm.qradar
              - name: infra.aap_configuration
              - name: microsoft.ad
              - name: netscaler.adc
              - name: paloaltonetworks.panos
              - name: redhat.insights
              - name: redhat.openshift
              - name: redhat.rhv
              - name: redhat.satellite
              - name: servicenow.itsm
              - name: shadowman.reports
              - name: vmware.vmware_rest
                version: 1.0.1
              - name: vyos.vyos
        build_files:
          - src: /home/ansible/ansible/builder/shadowmanee/ansible.cfg
            dest: configs
          - src: /certs/shadowman_cert.cer
            dest: certs
          - src: /certs/shadowman_private.key
            dest: certs
          - src: /certs/certificate.pfx
            dest: certs
          - src: /certs/service-ca-cert.crt
            dest: certs
        build_steps:
          prepend_builder:
            - ENV PKGMGR_OPTS "--nodocs --setopt install_weak_deps=0 --enablerepo=rhocp-4.13-for-rhel-8-x86_64-rpms"
          prepend_final:
            - ENV PKGMGR_OPTS "--nodocs --setopt install_weak_deps=0 --enablerepo=rhocp-4.13-for-rhel-8-x86_64-rpms"
          append_final:
            - COPY /certs/shadowman_cert.cer /certs/shadowman_cert.cer
            - COPY /certs/shadowman_private.key /certs/shadowman_private.key
            - COPY /certs/certificate.pfx /certs/certificate.pfx
            - COPY /certs/service-ca-cert.crt /certs/service-ca-cert.crt
            - RUN $PYCMD -m pip install --no-cache-dir --upgrade 'ansible-core<2.17.0'
            - RUN microdnf reinstall tzdata -y
            - RUN rm -f /etc/ansible/ansible.cfg
            - RUN microdnf clean all
  roles:
    - infra.ee_utilities.ee_builder
    - ah_update_controller
